(*----------------------------------------------------------------------------
 *  Copyright (c) 2020 AntÃ³nio Nuno Monteiro
 *
 *  All rights reserved.
 *
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions are met:
 *
 *  1. Redistributions of source code must retain the above copyright notice,
 *  this list of conditions and the following disclaimer.
 *
 *  2. Redistributions in binary form must reproduce the above copyright
 *  notice, this list of conditions and the following disclaimer in the
 *  documentation and/or other materials provided with the distribution.
 *
 *  3. Neither the name of the copyright holder nor the names of its
 *  contributors may be used to endorse or promote products derived from this
 *  software without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 *  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 *  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 *  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 *  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 *  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 *  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 *  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 *  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *---------------------------------------------------------------------------*)

(* partially generated by util/gen_static.ml *)
let not_found = -1

let table_size = 99

module TokenIndices = struct
  let token__authority = 0

  let token__path = 1

  let token_age = 2

  let token_content_disposition = 3

  let token_content_length = 4

  let token_cookie = 5

  let token_date = 6

  let token_etag = 7

  let token_if_modified_since = 8

  let token_if_none_match = 9

  let token_last_modified = 10

  let token_link = 11

  let token_location = 12

  let token_referer = 13

  let token_set_cookie = 14

  let token__method = 15

  let token__scheme = 22

  let token__status = 24

  let token_accept = 29

  let token_accept_encoding = 31

  let token_accept_ranges = 32

  let token_access_control_allow_headers = 33

  let token_access_control_allow_origin = 35

  let token_cache_control = 36

  let token_content_encoding = 42

  let token_content_type = 44

  let token_range = 55

  let token_strict_transport_security = 56

  let token_vary = 59

  let token_x_content_type_options = 61

  let token_x_xss_protection = 62

  let token_accept_language = 72

  let token_access_control_allow_credentials = 73

  let token_access_control_allow_methods = 76

  let token_access_control_expose_headers = 79

  let token_access_control_request_headers = 80

  let token_access_control_request_method = 81

  let token_alt_svc = 83

  let token_authorization = 84

  let token_content_security_policy = 85

  let token_early_data = 86

  let token_expect_ct = 87

  let token_forwarded = 88

  let token_if_range = 89

  let token_origin = 90

  let token_purpose = 91

  let token_server = 92

  let token_timing_allow_origin = 93

  let token_upgrade_insecure_requests = 94

  let token_user_agent = 95

  let token_x_forwarded_for = 96

  let token_x_frame_options = 97
end

let table =
  [| ":authority", ""
   ; ":path", "/"
   ; "age", "0"
   ; "content-disposition", ""
   ; "content-length", "0"
   ; "cookie", ""
   ; "date", ""
   ; "etag", ""
   ; "if-modified-since", ""
   ; "if-none-match", ""
   ; "last-modified", ""
   ; "link", ""
   ; "location", ""
   ; "referer", ""
   ; "set-cookie", ""
   ; ":method", "CONNECT"
   ; ":method", "DELETE"
   ; ":method", "GET"
   ; ":method", "HEAD"
   ; ":method", "OPTIONS"
   ; ":method", "POST"
   ; ":method", "PUT"
   ; ":scheme", "http"
   ; ":scheme", "https"
   ; ":status", "103"
   ; ":status", "200"
   ; ":status", "304"
   ; ":status", "404"
   ; ":status", "503"
   ; "accept", "*/*"
   ; "accept", "application/dns-message"
   ; "accept-encoding", "gzip, deflate, br"
   ; "accept-ranges", "bytes"
   ; "access-control-allow-headers", "cache-control"
   ; "access-control-allow-headers", "content-type"
   ; "access-control-allow-origin", "*"
   ; "cache-control", "max-age=0"
   ; "cache-control", "max-age=2592000"
   ; "cache-control", "max-age=604800"
   ; "cache-control", "no-cache"
   ; "cache-control", "no-store"
   ; "cache-control", "public, max-age=31536000"
   ; "content-encoding", "br"
   ; "content-encoding", "gzip"
   ; "content-type", "application/dns-message"
   ; "content-type", "application/javascript"
   ; "content-type", "application/json"
   ; "content-type", "application/x-www-form-urlencoded"
   ; "content-type", "image/gif"
   ; "content-type", "image/jpeg"
   ; "content-type", "image/png"
   ; "content-type", "text/css"
   ; "content-type", "text/html; charset=utf-8"
   ; "content-type", "text/plain"
   ; "content-type", "text/plain;charset=utf-8"
   ; "range", "bytes=0-"
   ; "strict-transport-security", "max-age=31536000"
   ; "strict-transport-security", "max-age=31536000; includesubdomains"
   ; "strict-transport-security", "max-age=31536000; includesubdomains; preload"
   ; "vary", "accept-encoding"
   ; "vary", "origin"
   ; "x-content-type-options", "nosniff"
   ; "x-xss-protection", "1; mode=block"
   ; ":status", "100"
   ; ":status", "204"
   ; ":status", "206"
   ; ":status", "302"
   ; ":status", "400"
   ; ":status", "403"
   ; ":status", "421"
   ; ":status", "425"
   ; ":status", "500"
   ; "accept-language", ""
   ; "access-control-allow-credentials", "FALSE"
   ; "access-control-allow-credentials", "TRUE"
   ; "access-control-allow-headers", "*"
   ; "access-control-allow-methods", "get"
   ; "access-control-allow-methods", "get, post, options"
   ; "access-control-allow-methods", "options"
   ; "access-control-expose-headers", "content-length"
   ; "access-control-request-headers", "content-type"
   ; "access-control-request-method", "get"
   ; "access-control-request-method", "post"
   ; "alt-svc", "clear"
   ; "authorization", ""
   ; ( "content-security-policy"
     , "script-src 'none'; object-src 'none'; base-uri 'none'" )
   ; "early-data", "1"
   ; "expect-ct", ""
   ; "forwarded", ""
   ; "if-range", ""
   ; "origin", ""
   ; "purpose", "prefetch"
   ; "server", ""
   ; "timing-allow-origin", "*"
   ; "upgrade-insecure-requests", "1"
   ; "user-agent", ""
   ; "x-forwarded-for", ""
   ; "x-frame-options", "deny"
   ; "x-frame-options", "sameorigin"
  |]

let lookup_token_index name =
  match String.length name with
  | 25 ->
    (match name.[0] with
    | 's' when name = "strict-transport-security" ->
      56
    | 'u' when name = "upgrade-insecure-requests" ->
      94
    | _ ->
      not_found)
  | 4 ->
    (match name.[0] with
    | 'e' when name = "etag" ->
      7
    | 'd' when name = "date" ->
      6
    | 'l' when name = "link" ->
      11
    | 'v' when name = "vary" ->
      59
    | _ ->
      not_found)
  | 30 ->
    (match name.[0] with
    | 'a' when name = "access-control-request-headers" ->
      80
    | _ ->
      not_found)
  | 14 ->
    (match name.[0] with
    | 'c' when name = "content-length" ->
      4
    | _ ->
      not_found)
  | 15 ->
    (match name.[7] with
    | 'e' when name = "accept-encoding" ->
      31
    | 'l' when name = "accept-language" ->
      72
    | 'r' when name = "x-forwarded-for" ->
      96
    | '-' when name = "x-frame-options" ->
      97
    | _ ->
      not_found)
  | 12 ->
    (match name.[0] with
    | 'c' when name = "content-type" ->
      44
    | _ ->
      not_found)
  | 8 ->
    (match name.[0] with
    | 'i' when name = "if-range" ->
      89
    | 'l' when name = "location" ->
      12
    | _ ->
      not_found)
  | 23 ->
    (match name.[0] with
    | 'c' when name = "content-security-policy" ->
      85
    | _ ->
      not_found)
  | 3 ->
    (match name.[0] with 'a' when name = "age" -> 2 | _ -> not_found)
  | 16 ->
    (match name.[0] with
    | 'c' when name = "content-encoding" ->
      42
    | 'x' when name = "x-xss-protection" ->
      62
    | _ ->
      not_found)
  | 9 ->
    (match name.[0] with
    | 'f' when name = "forwarded" ->
      88
    | 'e' when name = "expect-ct" ->
      87
    | _ ->
      not_found)
  | 13 ->
    (match name.[5] with
    | '-' when name = "cache-control" ->
      36
    | 'n' when name = "if-none-match" ->
      9
    | 'm' when name = "last-modified" ->
      10
    | 't' when name = "accept-ranges" ->
      32
    | 'r' when name = "authorization" ->
      84
    | _ ->
      not_found)
  | 19 ->
    (match name.[0] with
    | 't' when name = "timing-allow-origin" ->
      93
    | 'c' when name = "content-disposition" ->
      3
    | _ ->
      not_found)
  | 32 ->
    (match name.[0] with
    | 'a' when name = "access-control-allow-credentials" ->
      73
    | _ ->
      not_found)
  | 17 ->
    (match name.[0] with
    | 'i' when name = "if-modified-since" ->
      8
    | _ ->
      not_found)
  | 6 ->
    (match name.[0] with
    | 'o' when name = "origin" ->
      90
    | 's' when name = "server" ->
      92
    | 'c' when name = "cookie" ->
      5
    | 'a' when name = "accept" ->
      29
    | _ ->
      not_found)
  | 27 ->
    (match name.[0] with
    | 'a' when name = "access-control-allow-origin" ->
      35
    | _ ->
      not_found)
  | 22 ->
    (match name.[0] with
    | 'x' when name = "x-content-type-options" ->
      61
    | _ ->
      not_found)
  | 28 ->
    (match name.[21] with
    | 'm' when name = "access-control-allow-methods" ->
      76
    | 'h' when name = "access-control-allow-headers" ->
      33
    | _ ->
      not_found)
  | 5 ->
    (match name.[0] with
    | ':' when name = ":path" ->
      1
    | 'r' when name = "range" ->
      55
    | _ ->
      not_found)
  | 10 ->
    (match name.[0] with
    | 'u' when name = "user-agent" ->
      95
    | ':' when name = ":authority" ->
      0
    | 's' when name = "set-cookie" ->
      14
    | 'e' when name = "early-data" ->
      86
    | _ ->
      not_found)
  | 7 ->
    (match name.[3] with
    | 'a' when name = ":status" ->
      24
    | 'h' when name = ":scheme" ->
      22
    | 't' when name = ":method" ->
      15
    | 'e' when name = "referer" ->
      13
    | 'p' when name = "purpose" ->
      91
    | '-' when name = "alt-svc" ->
      83
    | _ ->
      not_found)
  | 29 ->
    (match name.[15] with
    | 'e' when name = "access-control-expose-headers" ->
      79
    | 'r' when name = "access-control-request-method" ->
      81
    | _ ->
      not_found)
  | _ ->
    not_found

(* Returns (just_name_index, name_value_index) *)
let lookup name value =
  let rec loop i =
    if i >= Array.length table then
      not_found
    else
      let name', value' = table.(i) in
      if name' = name && value' = value then
        i
      else
        loop (i + 1)
  in
  let idx = lookup_token_index name in
  if idx = not_found then
    (* short circuit if the name isn't even in the table *)
    idx, idx
  else
    (* TODO: can make exceptions _only_ for the cases that have interleaved
       entries. *)
    idx, loop idx
